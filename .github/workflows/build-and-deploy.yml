name: Build and Deploy

on:
  push:
    tags: [ 'v*' ]

permissions:
  contents: write
  packages: write

env:
  REGISTRY: docker.io
  IMAGE_NAME: dushixiang/cyberpoc

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.25'
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'yarn'
        cache-dependency-path: web/yarn.lock
        
    - name: Install dependencies
      run: |
        cd web
        # 使用yarn安装依赖，处理可选依赖更稳定
        yarn install --frozen-lockfile
        
    - name: Build frontend
      run: make build-web
      
    - name: Build backend
      run: |
        CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags '-s -w' -o bin/cyberpoc cmd/serv/main.go
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: cyberpoc-binary
        path: bin/cyberpoc

  docker:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: cyberpoc-binary
        path: bin/
        
    - name: Make binary executable
      run: chmod +x bin/cyberpoc
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  release:
    needs: [build, docker]
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: cyberpoc-binary
        path: bin/
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          bin/cyberpoc
        generate_release_notes: true
        token: ${{ secrets.GITHUB_TOKEN }}
