// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package cyber

import (
	"github.com/dushixiang/cyberpoc/internal/config"
	"github.com/dushixiang/cyberpoc/internal/cyber/handler"
	"github.com/dushixiang/cyberpoc/internal/cyber/service"
	"github.com/google/wire"
	"go.uber.org/zap"
	"gorm.io/gorm"
)

// Injectors from wire.go:

func ProviderDependency(logger *zap.Logger, db *gorm.DB, conf *config.Config) *Dependency {
	challengeService := service.NewChallengeService(db)
	challengeRecordService := service.NewChallengeRecordService(db)
	challengeHandler := handler.NewChallengeHandler(challengeService, challengeRecordService)
	imageService := service.NewImageService(db)
	imageHandler := handler.NewImageHandler(imageService)
	solveService := service.NewSolveService(db)
	reverseProxyService := service.NewReverseProxyService(logger)
	instanceService := service.NewInstanceService(db, logger, conf, challengeService, challengeRecordService, imageService, solveService, reverseProxyService)
	rankService := service.NewRankService(db)
	indexHandler := handler.NewIndexHandler(challengeService, instanceService, solveService, challengeRecordService, rankService)
	instanceHandler := handler.NewInstanceHandler(instanceService)
	dashboardHandler := handler.NewDashboardHandler(challengeService, instanceService, solveService)
	solveHandler := handler.NewSolveHandler(solveService, rankService, challengeService)
	dependency := &Dependency{
		ChallengeHandler:       challengeHandler,
		ImageHandler:           imageHandler,
		IndexHandler:           indexHandler,
		InstanceHandler:        instanceHandler,
		DashboardHandler:       dashboardHandler,
		SolveHandler:           solveHandler,
		ChallengeService:       challengeService,
		ChallengeRecordService: challengeRecordService,
		ImageService:           imageService,
		InstanceService:        instanceService,
		SolveService:           solveService,
		RankService:            rankService,
		ReverseProxyService:    reverseProxyService,
	}
	return dependency
}

// wire.go:

var appSet = wire.NewSet(
	serviceSet,
	apiSet, wire.Struct(new(Dependency), "*"),
)

var apiSet = wire.NewSet(handler.NewChallengeHandler, handler.NewImageHandler, handler.NewIndexHandler, handler.NewInstanceHandler, handler.NewDashboardHandler, handler.NewSolveHandler)

var serviceSet = wire.NewSet(service.NewChallengeRecordService, service.NewChallengeService, service.NewImageService, service.NewInstanceService, service.NewSolveService, service.NewRankService, service.NewReverseProxyService)
